{"ast":null,"code":"import _classCallCheck from \"C:\\\\todo-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\todo-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _regeneratorRuntime from \"C:\\\\todo-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport { __awaiter, __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Validators } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\nvar EmployeeModalComponent = /*#__PURE__*/function () {\n  function EmployeeModalComponent(managementDataService, fb, dialogService, snackbarService, data) {\n    _classCallCheck(this, EmployeeModalComponent);\n\n    this.managementDataService = managementDataService;\n    this.fb = fb;\n    this.dialogService = dialogService;\n    this.snackbarService = snackbarService;\n    this.data = data;\n    this.separatorKeysCodes = [ENTER, COMMA];\n    this.offices$ = this.managementDataService.offices$;\n  }\n\n  _createClass(EmployeeModalComponent, [{\n    key: \"noData\",\n    get: function get() {\n      return this.data === null;\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.form = this.fb.group({\n        tags: [this.noData ? [] : this.data.tags],\n        firstName: [this.noData ? '' : this.data.firstName, [Validators.required]],\n        lastName: [this.noData ? '' : this.data.lastName, [Validators.required]],\n        office: [this.noData ? '' : this.data.office._id, [Validators.required]],\n        phoneNumber: [this.noData ? '' : this.data.phoneNumber, [Validators.required, Validators.minLength(10)]],\n        birthDate: [this.noData ? '' : this.data.birthDate, [Validators.required]]\n      });\n    }\n  }, {\n    key: \"onDialogClose\",\n    value: function onDialogClose() {\n      this.dialogService.closeAll();\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!this.noData) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 4;\n                return this.managementDataService.addEmployee(this.form.value).toPromise();\n\n              case 4:\n                _context.next = 8;\n                break;\n\n              case 6:\n                _context.next = 8;\n                return this.managementDataService.updateEmployee(Object.assign(Object.assign({}, this.data), this.form.value)).toPromise();\n\n              case 8:\n                this.onDialogClose();\n                _context.next = 13;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n    }\n  }, {\n    key: \"onClear\",\n    value: function onClear() {\n      this.form.reset();\n    }\n  }, {\n    key: \"addTag\",\n    value: function addTag(event) {\n      var value = (event.value || '').trim();\n\n      if (value && !this.form.value.tags.includes(value)) {\n        this.form.patchValue({\n          tags: this.form.value.tags.concat([value])\n        });\n      }\n\n      event.chipInput.clear();\n    }\n  }, {\n    key: \"removeTag\",\n    value: function removeTag(tag) {\n      var tags = this.form.value.tags.filter(function (t) {\n        return t !== tag;\n      });\n      this.form.patchValue({\n        tags: tags\n      });\n    }\n  }]);\n\n  return EmployeeModalComponent;\n}();\n\nEmployeeModalComponent = __decorate([Component({\n  selector: 'app-employee-modal',\n  templateUrl: './employee-modal.component.html',\n  styleUrls: ['./employee-modal.component.css']\n}), __param(4, Inject(MAT_DIALOG_DATA))], EmployeeModalComponent);\nexport { EmployeeModalComponent };","map":null,"metadata":{},"sourceType":"module"}