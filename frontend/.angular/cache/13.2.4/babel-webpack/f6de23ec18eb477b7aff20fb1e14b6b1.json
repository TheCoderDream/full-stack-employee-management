{"ast":null,"code":"import _slicedToArray from \"C:\\\\todo-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\nimport _classCallCheck from \"C:\\\\todo-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\todo-app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { BehaviorSubject, combineLatest } from \"rxjs\";\nimport { finalize, map, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./employee.service\";\nexport var EmployeeDataService = /*#__PURE__*/(function () {\n  var EmployeeDataService = /*#__PURE__*/function () {\n    function EmployeeDataService(employeesService) {\n      _classCallCheck(this, EmployeeDataService);\n\n      this.employeesService = employeesService;\n      this.employees = [];\n      this.employeesSubject = new BehaviorSubject(this.employees);\n      this.isLoadingSubject = new BehaviorSubject(false);\n      this.employees$ = this.employeesSubject.asObservable();\n      this.isLoading$ = this.isLoadingSubject.asObservable();\n      this.noData$ = combineLatest([this.employees$, this.isLoading$]).pipe(map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            employess = _ref2[0],\n            isLoading = _ref2[1];\n\n        return !isLoading && employess.length;\n      }));\n    }\n\n    _createClass(EmployeeDataService, [{\n      key: \"fetchEmployees\",\n      value: function fetchEmployees() {\n        var _this = this;\n\n        this.isLoadingSubject.next(true);\n        return this.employeesService.getEmployees().pipe(tap(function (data) {\n          _this.employees = data;\n\n          _this.employeesSubject.next(_this.employees);\n        }), finalize(function () {\n          _this.isLoadingSubject.next(false);\n        }));\n      }\n    }, {\n      key: \"addEmployees\",\n      value: function addEmployees(employee) {\n        var _this2 = this;\n\n        this.isLoadingSubject.next(true);\n        return this.employeesService.addEmployee(employee).pipe(tap(function (data) {\n          _this2.employees = _this2.employees.concat([employee]);\n\n          _this2.employeesSubject.next(_this2.employees);\n        }), finalize(function () {\n          _this2.isLoadingSubject.next(false);\n        }));\n      }\n    }, {\n      key: \"removeEmployee\",\n      value: function removeEmployee(id) {\n        var _this3 = this;\n\n        this.isLoadingSubject.next(true);\n        return this.employeesService.deleteEmployee(id).pipe(tap(function (data) {\n          var employeeIndex = _this3.employees.findIndex(function (e) {\n            return e._id === id;\n          });\n\n          _this3.employees.splice(employeeIndex, 1);\n\n          _this3.employees = _this3.employees.concat();\n\n          _this3.employeesSubject.next(_this3.employees);\n        }), finalize(function () {\n          _this3.isLoadingSubject.next(false);\n        }));\n      }\n    }]);\n\n    return EmployeeDataService;\n  }();\n\n  EmployeeDataService.ɵfac = function EmployeeDataService_Factory(t) {\n    return new (t || EmployeeDataService)(i0.ɵɵinject(i1.EmployeeService));\n  };\n\n  EmployeeDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeDataService,\n    factory: EmployeeDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return EmployeeDataService;\n})();","map":null,"metadata":{},"sourceType":"module"}